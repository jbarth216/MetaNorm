// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rMvNorm
arma::mat rMvNorm(int n, arma::vec mu, arma::mat sigma);
RcppExport SEXP _MetaNorm_rMvNorm(SEXP nSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(rMvNorm(n, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// inverse
arma::mat inverse(arma::mat sig);
RcppExport SEXP _MetaNorm_inverse(SEXP sigSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type sig(sigSEXP);
    rcpp_result_gen = Rcpp::wrap(inverse(sig));
    return rcpp_result_gen;
END_RCPP
}
// Sig1_cpp
arma::mat Sig1_cpp(arma::mat Sig, arma::mat X, arma::mat sigjk);
RcppExport SEXP _MetaNorm_Sig1_cpp(SEXP SigSEXP, SEXP XSEXP, SEXP sigjkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sig(SigSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigjk(sigjkSEXP);
    rcpp_result_gen = Rcpp::wrap(Sig1_cpp(Sig, X, sigjk));
    return rcpp_result_gen;
END_RCPP
}
// mu_cpp
arma::mat mu_cpp(arma::mat Sig1, arma::mat Sig, arma::mat X, arma::mat sigjk, arma::vec m, arma::vec Y, arma::vec s);
RcppExport SEXP _MetaNorm_mu_cpp(SEXP Sig1SEXP, SEXP SigSEXP, SEXP XSEXP, SEXP sigjkSEXP, SEXP mSEXP, SEXP YSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sig1(Sig1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sig(SigSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sigjk(sigjkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(mu_cpp(Sig1, Sig, X, sigjk, m, Y, s));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MetaNorm_rMvNorm", (DL_FUNC) &_MetaNorm_rMvNorm, 3},
    {"_MetaNorm_inverse", (DL_FUNC) &_MetaNorm_inverse, 1},
    {"_MetaNorm_Sig1_cpp", (DL_FUNC) &_MetaNorm_Sig1_cpp, 3},
    {"_MetaNorm_mu_cpp", (DL_FUNC) &_MetaNorm_mu_cpp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_MetaNorm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
